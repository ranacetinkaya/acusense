{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./App.css';import AddUser from'./Components/AddUser';import UserTable from'./Components/UserTable';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[users,setUsers]=useState([]);useEffect(()=>{fetchData();},[]);const fetchData=async()=>{try{const res=await fetch('https://jsonplaceholder.typicode.com/users');const data=await res.json();setUsers(data);}catch(err){console.log('Error fetching users:',err);}};const onAdd=async(name,email)=>{try{const res=await fetch('https://jsonplaceholder.typicode.com/users',{method:'POST',body:JSON.stringify({name:name,email:email}),headers:{'Content-type':'application/json; charset=UTF-8'}});if(res.status!==201){console.log('Failed to add user');return;}const data=await res.json();setUsers(users=>[...users,data]);}catch(err){console.log('Error adding user:',err);}};const onDelete=async id=>{try{const res=await fetch(`https://jsonplaceholder.typicode.com/users/${id}`,{method:'DELETE'});if(res.status!==200){console.log('Failed to delete user');return;}setUsers(users.filter(user=>user.id!==id));}catch(err){console.log('Error deleting user:',err);}};const onUpdate=async(id,name,email)=>{try{const res=await fetch(`https://jsonplaceholder.typicode.com/users/${id}`,{method:'PUT',body:JSON.stringify({id:id,name:name,email:email}),headers:{'Content-type':'application/json; charset=UTF-8'}});if(res.status!==200){console.log('Failed to update user');return;}const data=await res.json();setUsers(users.map(user=>user.id===id?data:user));}catch(err){console.log('Error updating user:',err);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"React CRUD Using JSONPlaceholder\"}),/*#__PURE__*/_jsx(AddUser,{onAdd:onAdd}),/*#__PURE__*/_jsx(UserTable,{users:users,onDelete:onDelete,onUpdate:onUpdate})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","AddUser","UserTable","jsx","_jsx","jsxs","_jsxs","App","users","setUsers","fetchData","res","fetch","data","json","err","console","log","onAdd","name","email","method","body","JSON","stringify","headers","status","onDelete","id","filter","user","onUpdate","map","className","children"],"sources":["C:/react/reactapp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport AddUser from './Components/AddUser';\nimport UserTable from './Components/UserTable';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users');\n      const data = await res.json();\n      setUsers(data);\n    } catch (err) {\n      console.log('Error fetching users:', err);\n    }\n  };\n\n  const onAdd = async (name, email) => {\n    try {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users', {\n        method: 'POST',\n        body: JSON.stringify({\n          name: name,\n          email: email,\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n\n      if (res.status !== 201) {\n        console.log('Failed to add user');\n        return;\n      }\n\n      const data = await res.json();\n      setUsers((users) => [...users, data]);\n    } catch (err) {\n      console.log('Error adding user:', err);\n    }\n  };\n\n  const onDelete = async (id) => {\n    try {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (res.status !== 200) {\n        console.log('Failed to delete user');\n        return;\n      }\n\n      setUsers(users.filter((user) => user.id !== id));\n    } catch (err) {\n      console.log('Error deleting user:', err);\n    }\n  };\n\n  const onUpdate = async (id, name, email) => {\n    try {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          id: id,\n          name: name,\n          email: email,\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n\n      if (res.status !== 200) {\n        console.log('Failed to update user');\n        return;\n      }\n\n      const data = await res.json();\n      setUsers(users.map((user) => (user.id === id ? data : user)));\n    } catch (err) {\n      console.log('Error updating user:', err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h3>React CRUD Using JSONPlaceholder</h3>\n      <AddUser onAdd={onAdd} />\n      <UserTable users={users} onDelete={onDelete} onUpdate={onUpdate} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}