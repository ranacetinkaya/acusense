{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\reactapp\\\\src\\\\Components\\\\UserTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './userTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = ({\n  users,\n  onDelete,\n  onUpdate\n}) => {\n  _s();\n  var _users$find;\n  const [editUserId, setEditUserId] = useState(null);\n  const [newName, setNewName] = useState('');\n  const [newEmail, setNewEmail] = useState('');\n  const [comments, setComments] = useState({});\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const commentsData = {};\n        // Assume each user has a postId equal to their ID\n        for (const user of users) {\n          const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${user.id}`);\n          const data = await res.json();\n          commentsData[user.id] = data;\n        }\n        setComments(commentsData);\n      } catch (err) {\n        console.log('Error fetching comments:', err);\n      }\n    };\n    fetchComments();\n  }, [users]);\n  const handleEditClick = user => {\n    setEditUserId(user.id);\n    setNewName(user.name);\n    setNewEmail(user.email);\n  };\n  const handleUpdateClick = () => {\n    if (editUserId) {\n      onUpdate(editUserId, newName, newEmail);\n      setEditUserId(null);\n      setNewName('');\n      setNewEmail('');\n    }\n  };\n  const handleCommentsClick = userId => {\n    setSelectedUserId(userId);\n  };\n  const handleCloseComments = () => {\n    setSelectedUserId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"user-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newName,\n              onChange: e => setNewName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this) : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: newEmail,\n              onChange: e => setNewEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this) : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"update-btn\",\n              onClick: handleUpdateClick,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => handleEditClick(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => onDelete(user.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"comments-btn\",\n              onClick: () => handleCommentsClick(user.id),\n              children: \"Show Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selectedUserId !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: handleCloseComments,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Comments for \", (_users$find = users.find(user => user.id === selectedUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: comments[selectedUserId] && comments[selectedUserId].map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-box\",\n          children: comment.body\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTable, \"YmOsGSvTYizHNnZYE89WEzCvLjs=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserTable","users","onDelete","onUpdate","_s","_users$find","editUserId","setEditUserId","newName","setNewName","newEmail","setNewEmail","comments","setComments","selectedUserId","setSelectedUserId","fetchComments","commentsData","user","res","fetch","id","data","json","err","console","log","handleEditClick","name","email","handleUpdateClick","handleCommentsClick","userId","handleCloseComments","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","target","onClick","find","comment","body","_c","$RefreshReg$"],"sources":["C:/react/reactapp/src/Components/UserTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './userTable.css';\r\n\r\nconst UserTable = ({ users, onDelete, onUpdate }) => {\r\n  const [editUserId, setEditUserId] = useState(null);\r\n  const [newName, setNewName] = useState('');\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [comments, setComments] = useState({});\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const commentsData = {};\r\n        // Assume each user has a postId equal to their ID\r\n        for (const user of users) {\r\n          const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${user.id}`);\r\n          const data = await res.json();\r\n          commentsData[user.id] = data;\r\n        }\r\n        setComments(commentsData);\r\n      } catch (err) {\r\n        console.log('Error fetching comments:', err);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [users]);\r\n\r\n  const handleEditClick = (user) => {\r\n    setEditUserId(user.id);\r\n    setNewName(user.name);\r\n    setNewEmail(user.email);\r\n  };\r\n\r\n  const handleUpdateClick = () => {\r\n    if (editUserId) {\r\n      onUpdate(editUserId, newName, newEmail);\r\n      setEditUserId(null);\r\n      setNewName('');\r\n      setNewEmail('');\r\n    }\r\n  };\r\n\r\n  const handleCommentsClick = (userId) => {\r\n    setSelectedUserId(userId);\r\n  };\r\n\r\n  const handleCloseComments = () => {\r\n    setSelectedUserId(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={(e) => setNewName(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  user.name\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <input\r\n                    type=\"email\"\r\n                    value={newEmail}\r\n                    onChange={(e) => setNewEmail(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  user.email\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <button className=\"update-btn\" onClick={handleUpdateClick}>\r\n                    Update\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"edit-btn\" onClick={() => handleEditClick(user)}>\r\n                    Edit\r\n                  </button>\r\n                )}\r\n                <button className=\"delete-btn\" onClick={() => onDelete(user.id)}>\r\n                  Delete\r\n                </button>\r\n                <button className=\"comments-btn\" onClick={() => handleCommentsClick(user.id)}>\r\n                  Show Comments\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {selectedUserId !== null && (\r\n        <div className=\"comments-popup\">\r\n          <button className=\"close-btn\" onClick={handleCloseComments}>\r\n            Close\r\n          </button>\r\n          <h3>Comments for {users.find(user => user.id === selectedUserId)?.name}</h3>\r\n          <div className=\"comments-container\">\r\n            {comments[selectedUserId] && comments[selectedUserId].map((comment) => (\r\n              <div key={comment.id} className=\"comment-box\">\r\n                {comment.body}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}