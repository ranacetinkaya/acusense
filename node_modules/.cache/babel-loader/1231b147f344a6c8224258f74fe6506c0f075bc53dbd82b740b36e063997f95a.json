{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\reactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport User from './Components/User';\nimport AddUser from './Components/AddUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users');\n      const data = await res.json();\n      setUsers(data);\n    } catch (err) {\n      console.log('Error fetching users:', err);\n    }\n  };\n  const onAdd = async (name, email) => {\n    try {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users', {\n        method: 'POST',\n        body: JSON.stringify({\n          name: name,\n          email: email\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      if (res.status !== 201) {\n        console.log('Failed to add user');\n        return;\n      }\n      const data = await res.json();\n      setUsers(users => [...users, data]);\n    } catch (err) {\n      console.log('Error adding user:', err);\n    }\n  };\n  const onDelete = async id => {\n    console.log(\"Deleting user with ID:\", id);\n    try {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n        method: 'DELETE'\n      });\n      if (res.status !== 200) {\n        console.log('Failed to delete user');\n        return;\n      }\n      setUsers(users.filter(user => user.id !== id));\n    } catch (err) {\n      console.log('Error deleting user:', err);\n    }\n  };\n  const onUpdate = async (id, name, email) => {\n    try {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          id: id,\n          name: name,\n          email: email\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      if (res.status !== 200) {\n        console.log('Failed to update user');\n        return;\n      }\n      const data = await res.json();\n      setUsers(users.map(user => user.id === id ? data : user));\n    } catch (err) {\n      console.log('Error updating user:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"React CRUD Using JSONPlaceholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddUser, {\n      onAdd: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        onDelete: onDelete,\n        onUpdate: onUpdate\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","User","AddUser","jsxDEV","_jsxDEV","App","_s","users","setUsers","fetchData","res","fetch","data","json","err","console","log","onAdd","name","email","method","body","JSON","stringify","headers","status","onDelete","id","filter","user","onUpdate","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react/reactapp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport User from './Components/User';\nimport AddUser from './Components/AddUser';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users');\n      const data = await res.json();\n      setUsers(data);\n    } catch (err) {\n      console.log('Error fetching users:', err);\n    }\n  };\n\n  const onAdd = async (name, email) => {\n    try {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users', {\n        method: 'POST',\n        body: JSON.stringify({\n          name: name,\n          email: email,\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n\n      if (res.status !== 201) {\n        console.log('Failed to add user');\n        return;\n      }\n\n      const data = await res.json();\n      setUsers((users) => [...users, data]);\n    } catch (err) {\n      console.log('Error adding user:', err);\n    }\n  };\n\n  const onDelete = async (id) => {\n    console.log(\"Deleting user with ID:\", id);\n\n    try {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (res.status !== 200) {\n        console.log('Failed to delete user');\n        return;\n      }\n\n      setUsers(users.filter((user) => user.id !== id));\n    } catch (err) {\n      console.log('Error deleting user:', err);\n    }\n  };\n\n  const onUpdate = async (id, name, email) => {\n    try {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          id: id,\n          name: name,\n          email: email,\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n\n      if (res.status !== 200) {\n        console.log('Failed to update user');\n        return;\n      }\n\n      const data = await res.json();\n      setUsers(users.map((user) => (user.id === id ? data : user)));\n    } catch (err) {\n      console.log('Error updating user:', err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h3>React CRUD Using JSONPlaceholder</h3>\n      <AddUser onAdd={onAdd} />\n      <div>\n        {users.map((user) => (\n          <User\n            id={user.id}\n            key={user.id}\n            name={user.name}\n            email={user.email}\n            onDelete={onDelete}\n            onUpdate={onUpdate}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}