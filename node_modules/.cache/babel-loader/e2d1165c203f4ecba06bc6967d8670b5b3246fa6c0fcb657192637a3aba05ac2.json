{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\reactapp\\\\src\\\\Components\\\\UserTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './userTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = ({\n  users,\n  onDelete,\n  onUpdate\n}) => {\n  _s();\n  var _users$find;\n  const [editUserId, setEditUserId] = useState(null);\n  const [newName, setNewName] = useState('');\n  const [newEmail, setNewEmail] = useState('');\n  const [comments, setComments] = useState({});\n  const [photos, setPhotos] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const commentsData = {};\n        for (const user of users) {\n          const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${user.id}`);\n          const data = await res.json();\n          commentsData[user.id] = data;\n        }\n        setComments(commentsData);\n      } catch (err) {\n        console.log('Error fetching comments:', err);\n      }\n    };\n    const fetchPhotos = async () => {\n      try {\n        const res = await fetch('https://jsonplaceholder.typicode.com/photos');\n        const data = await res.json();\n        // Assign each user a photo (for simplicity, assigning the first 10 photos)\n        const photosData = {};\n        users.forEach((user, index) => {\n          if (index < data.length) {\n            photosData[user.id] = data[index];\n          }\n        });\n        setPhotos(photosData);\n      } catch (err) {\n        console.log('Error fetching photos:', err);\n      }\n    };\n    fetchComments();\n    fetchPhotos();\n  }, [users]);\n  const handleEditClick = user => {\n    setEditUserId(user.id);\n    setNewName(user.name);\n    setNewEmail(user.email);\n  };\n  const handleUpdateClick = () => {\n    if (editUserId) {\n      onUpdate(editUserId, newName, newEmail);\n      setEditUserId(null);\n      setNewName('');\n      setNewEmail('');\n    }\n  };\n  const handleCommentsClick = userId => {\n    setSelectedUserId(userId);\n  };\n  const handleCloseComments = () => {\n    setSelectedUserId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"user-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: photos[user.id] && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: photos[user.id].url,\n              alt: photos[user.id].title,\n              className: \"user-photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newName,\n              onChange: e => setNewName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this) : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: newEmail,\n              onChange: e => setNewEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this) : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"update-btn\",\n              onClick: handleUpdateClick,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => handleEditClick(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => onDelete(user.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"comments-btn\",\n              onClick: () => handleCommentsClick(user.id),\n              children: \"Show Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), selectedUserId !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: handleCloseComments,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Comments for \", (_users$find = users.find(user => user.id === selectedUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: comments[selectedUserId] && comments[selectedUserId].map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-box\",\n          children: comment.body\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTable, \"69KH5wOS+HCmcmawfIuQ6uT+hFI=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserTable","users","onDelete","onUpdate","_s","_users$find","editUserId","setEditUserId","newName","setNewName","newEmail","setNewEmail","comments","setComments","photos","setPhotos","selectedUserId","setSelectedUserId","fetchComments","commentsData","user","res","fetch","id","data","json","err","console","log","fetchPhotos","photosData","forEach","index","length","handleEditClick","name","email","handleUpdateClick","handleCommentsClick","userId","handleCloseComments","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","src","url","alt","title","type","value","onChange","e","target","onClick","find","comment","body","_c","$RefreshReg$"],"sources":["C:/react/reactapp/src/Components/UserTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './userTable.css';\r\n\r\nconst UserTable = ({ users, onDelete, onUpdate }) => {\r\n  const [editUserId, setEditUserId] = useState(null);\r\n  const [newName, setNewName] = useState('');\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [comments, setComments] = useState({});\r\n  const [photos, setPhotos] = useState([]);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const commentsData = {};\r\n        for (const user of users) {\r\n          const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${user.id}`);\r\n          const data = await res.json();\r\n          commentsData[user.id] = data;\r\n        }\r\n        setComments(commentsData);\r\n      } catch (err) {\r\n        console.log('Error fetching comments:', err);\r\n      }\r\n    };\r\n\r\n    const fetchPhotos = async () => {\r\n      try {\r\n        const res = await fetch('https://jsonplaceholder.typicode.com/photos');\r\n        const data = await res.json();\r\n        // Assign each user a photo (for simplicity, assigning the first 10 photos)\r\n        const photosData = {};\r\n        users.forEach((user, index) => {\r\n          if (index < data.length) {\r\n            photosData[user.id] = data[index];\r\n          }\r\n        });\r\n        setPhotos(photosData);\r\n      } catch (err) {\r\n        console.log('Error fetching photos:', err);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n    fetchPhotos();\r\n  }, [users]);\r\n\r\n  const handleEditClick = (user) => {\r\n    setEditUserId(user.id);\r\n    setNewName(user.name);\r\n    setNewEmail(user.email);\r\n  };\r\n\r\n  const handleUpdateClick = () => {\r\n    if (editUserId) {\r\n      onUpdate(editUserId, newName, newEmail);\r\n      setEditUserId(null);\r\n      setNewName('');\r\n      setNewEmail('');\r\n    }\r\n  };\r\n\r\n  const handleCommentsClick = (userId) => {\r\n    setSelectedUserId(userId);\r\n  };\r\n\r\n  const handleCloseComments = () => {\r\n    setSelectedUserId(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Photo</th>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>\r\n                {photos[user.id] && (\r\n                  <img src={photos[user.id].url} alt={photos[user.id].title} className=\"user-photo\" />\r\n                )}\r\n              </td>\r\n              <td>{user.id}</td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={(e) => setNewName(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  user.name\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <input\r\n                    type=\"email\"\r\n                    value={newEmail}\r\n                    onChange={(e) => setNewEmail(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  user.email\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <button className=\"update-btn\" onClick={handleUpdateClick}>\r\n                    Update\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"edit-btn\" onClick={() => handleEditClick(user)}>\r\n                    Edit\r\n                  </button>\r\n                )}\r\n                <button className=\"delete-btn\" onClick={() => onDelete(user.id)}>\r\n                  Delete\r\n                </button>\r\n                <button className=\"comments-btn\" onClick={() => handleCommentsClick(user.id)}>\r\n                  Show Comments\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {selectedUserId !== null && (\r\n        <div className=\"comments-popup\">\r\n          <button className=\"close-btn\" onClick={handleCloseComments}>\r\n            Close\r\n          </button>\r\n          <h3>Comments for {users.find(user => user.id === selectedUserId)?.name}</h3>\r\n          <div className=\"comments-container\">\r\n            {comments[selectedUserId] && comments[selectedUserId].map((comment) => (\r\n              <div key={comment.id} className=\"comment-box\">\r\n                {comment.body}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,WAAA;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMqB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,YAAY,GAAG,CAAC,CAAC;QACvB,KAAK,MAAMC,IAAI,IAAInB,KAAK,EAAE;UACxB,MAAMoB,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwDF,IAAI,CAACG,EAAE,EAAE,CAAC;UAC1F,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;UAC7BN,YAAY,CAACC,IAAI,CAACG,EAAE,CAAC,GAAGC,IAAI;QAC9B;QACAX,WAAW,CAACM,YAAY,CAAC;MAC3B,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAC9C;IACF,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;QACtE,MAAME,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B;QACA,MAAMK,UAAU,GAAG,CAAC,CAAC;QACrB7B,KAAK,CAAC8B,OAAO,CAAC,CAACX,IAAI,EAAEY,KAAK,KAAK;UAC7B,IAAIA,KAAK,GAAGR,IAAI,CAACS,MAAM,EAAE;YACvBH,UAAU,CAACV,IAAI,CAACG,EAAE,CAAC,GAAGC,IAAI,CAACQ,KAAK,CAAC;UACnC;QACF,CAAC,CAAC;QACFjB,SAAS,CAACe,UAAU,CAAC;MACvB,CAAC,CAAC,OAAOJ,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC5C;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;IACfW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAAC5B,KAAK,CAAC,CAAC;EAEX,MAAMiC,eAAe,GAAId,IAAI,IAAK;IAChCb,aAAa,CAACa,IAAI,CAACG,EAAE,CAAC;IACtBd,UAAU,CAACW,IAAI,CAACe,IAAI,CAAC;IACrBxB,WAAW,CAACS,IAAI,CAACgB,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI/B,UAAU,EAAE;MACdH,QAAQ,CAACG,UAAU,EAAEE,OAAO,EAAEE,QAAQ,CAAC;MACvCH,aAAa,CAAC,IAAI,CAAC;MACnBE,UAAU,CAAC,EAAE,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,MAAM2B,mBAAmB,GAAIC,MAAM,IAAK;IACtCtB,iBAAiB,CAACsB,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCvB,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACElB,OAAA;IAAA0C,QAAA,gBACE1C,OAAA;MAAO2C,SAAS,EAAC,YAAY;MAAAD,QAAA,gBAC3B1C,OAAA;QAAA0C,QAAA,eACE1C,OAAA;UAAA0C,QAAA,gBACE1C,OAAA;YAAA0C,QAAA,EAAI;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd/C,OAAA;YAAA0C,QAAA,EAAI;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACX/C,OAAA;YAAA0C,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb/C,OAAA;YAAA0C,QAAA,EAAI;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd/C,OAAA;YAAA0C,QAAA,EAAI;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR/C,OAAA;QAAA0C,QAAA,EACGxC,KAAK,CAAC8C,GAAG,CAAE3B,IAAI,iBACdrB,OAAA;UAAA0C,QAAA,gBACE1C,OAAA;YAAA0C,QAAA,EACG3B,MAAM,CAACM,IAAI,CAACG,EAAE,CAAC,iBACdxB,OAAA;cAAKiD,GAAG,EAAElC,MAAM,CAACM,IAAI,CAACG,EAAE,CAAC,CAAC0B,GAAI;cAACC,GAAG,EAAEpC,MAAM,CAACM,IAAI,CAACG,EAAE,CAAC,CAAC4B,KAAM;cAACT,SAAS,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UACpF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACL/C,OAAA;YAAA0C,QAAA,EAAKrB,IAAI,CAACG;UAAE;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClB/C,OAAA;YAAA0C,QAAA,EACGnC,UAAU,KAAKc,IAAI,CAACG,EAAE,gBACrBxB,OAAA;cACEqD,IAAI,EAAC,MAAM;cACXC,KAAK,EAAE7C,OAAQ;cACf8C,QAAQ,EAAGC,CAAC,IAAK9C,UAAU,CAAC8C,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,GAEF1B,IAAI,CAACe;UACN;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACL/C,OAAA;YAAA0C,QAAA,EACGnC,UAAU,KAAKc,IAAI,CAACG,EAAE,gBACrBxB,OAAA;cACEqD,IAAI,EAAC,OAAO;cACZC,KAAK,EAAE3C,QAAS;cAChB4C,QAAQ,EAAGC,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,GAEF1B,IAAI,CAACgB;UACN;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACL/C,OAAA;YAAA0C,QAAA,GACGnC,UAAU,KAAKc,IAAI,CAACG,EAAE,gBACrBxB,OAAA;cAAQ2C,SAAS,EAAC,YAAY;cAACe,OAAO,EAAEpB,iBAAkB;cAAAI,QAAA,EAAC;YAE3D;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAET/C,OAAA;cAAQ2C,SAAS,EAAC,UAAU;cAACe,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACd,IAAI,CAAE;cAAAqB,QAAA,EAAC;YAEnE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,eACD/C,OAAA;cAAQ2C,SAAS,EAAC,YAAY;cAACe,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAACkB,IAAI,CAACG,EAAE,CAAE;cAAAkB,QAAA,EAAC;YAEjE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT/C,OAAA;cAAQ2C,SAAS,EAAC,cAAc;cAACe,OAAO,EAAEA,CAAA,KAAMnB,mBAAmB,CAAClB,IAAI,CAACG,EAAE,CAAE;cAAAkB,QAAA,EAAC;YAE9E;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA,GA7CE1B,IAAI,CAACG,EAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8CZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACP9B,cAAc,KAAK,IAAI,iBACtBjB,OAAA;MAAK2C,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7B1C,OAAA;QAAQ2C,SAAS,EAAC,WAAW;QAACe,OAAO,EAAEjB,mBAAoB;QAAAC,QAAA,EAAC;MAE5D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT/C,OAAA;QAAA0C,QAAA,GAAI,eAAa,GAAApC,WAAA,GAACJ,KAAK,CAACyD,IAAI,CAACtC,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKP,cAAc,CAAC,cAAAX,WAAA,uBAA9CA,WAAA,CAAgD8B,IAAI;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5E/C,OAAA;QAAK2C,SAAS,EAAC,oBAAoB;QAAAD,QAAA,EAChC7B,QAAQ,CAACI,cAAc,CAAC,IAAIJ,QAAQ,CAACI,cAAc,CAAC,CAAC+B,GAAG,CAAEY,OAAO,iBAChE5D,OAAA;UAAsB2C,SAAS,EAAC,aAAa;UAAAD,QAAA,EAC1CkB,OAAO,CAACC;QAAI,GADLD,OAAO,CAACpC,EAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1C,EAAA,CApJIJ,SAAS;AAAA6D,EAAA,GAAT7D,SAAS;AAsJf,eAAeA,SAAS;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}