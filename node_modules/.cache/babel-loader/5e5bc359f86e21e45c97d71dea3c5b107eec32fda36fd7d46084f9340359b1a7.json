{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\reactapp\\\\src\\\\Components\\\\UserTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './userTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = ({\n  users,\n  onDelete,\n  onUpdate\n}) => {\n  _s();\n  const [editUserId, setEditUserId] = useState(null);\n  const [newName, setNewName] = useState('');\n  const [newEmail, setNewEmail] = useState('');\n  const [comments, setComments] = useState({});\n  const [selectedComments, setSelectedComments] = useState(null);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        for (const user of users) {\n          const res = await fetch(`https://jsonplaceholder.typicode.com/posts/1/comments`);\n          const data = await res.json();\n          setComments(prevComments => ({\n            ...prevComments,\n            [user.id]: data\n          }));\n        }\n      } catch (err) {\n        console.log('Error fetching comments:', err);\n      }\n    };\n    fetchComments();\n  }, [users]);\n  const handleEditClick = user => {\n    setEditUserId(user.id);\n    setNewName(user.name);\n    setNewEmail(user.email);\n  };\n  const handleUpdateClick = () => {\n    if (editUserId) {\n      onUpdate(editUserId, newName, newEmail);\n      setEditUserId(null);\n      setNewName('');\n      setNewEmail('');\n    }\n  };\n  const handleCommentsClick = userId => {\n    setSelectedComments(userId);\n  };\n  const handleCloseComments = () => {\n    setSelectedComments(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"user-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newName,\n              onChange: e => setNewName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this) : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: newEmail,\n              onChange: e => setNewEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this) : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [editUserId === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"update-btn\",\n              onClick: handleUpdateClick,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => handleEditClick(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => onDelete(user.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"comments-btn\",\n              onClick: () => handleCommentsClick(user.id),\n              children: \"Show Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selectedComments !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: handleCloseComments,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: comments[selectedComments] && comments[selectedComments].map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-box\",\n          children: comment.body\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTable, \"FpPlL+xHl+vRWJW4KfQ5GhY8wto=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserTable","users","onDelete","onUpdate","_s","editUserId","setEditUserId","newName","setNewName","newEmail","setNewEmail","comments","setComments","selectedComments","setSelectedComments","fetchComments","user","res","fetch","data","json","prevComments","id","err","console","log","handleEditClick","name","email","handleUpdateClick","handleCommentsClick","userId","handleCloseComments","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","target","onClick","comment","body","_c","$RefreshReg$"],"sources":["C:/react/reactapp/src/Components/UserTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './userTable.css';\r\n\r\nconst UserTable = ({ users, onDelete, onUpdate }) => {\r\n  const [editUserId, setEditUserId] = useState(null);\r\n  const [newName, setNewName] = useState('');\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [comments, setComments] = useState({});\r\n  const [selectedComments, setSelectedComments] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        for (const user of users) {\r\n          const res = await fetch(`https://jsonplaceholder.typicode.com/posts/1/comments`);\r\n          const data = await res.json();\r\n          setComments((prevComments) => ({\r\n            ...prevComments,\r\n            [user.id]: data\r\n          }));\r\n        }\r\n      } catch (err) {\r\n        console.log('Error fetching comments:', err);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [users]);\r\n\r\n  const handleEditClick = (user) => {\r\n    setEditUserId(user.id);\r\n    setNewName(user.name);\r\n    setNewEmail(user.email);\r\n  };\r\n\r\n  const handleUpdateClick = () => {\r\n    if (editUserId) {\r\n      onUpdate(editUserId, newName, newEmail);\r\n      setEditUserId(null);\r\n      setNewName('');\r\n      setNewEmail('');\r\n    }\r\n  };\r\n\r\n  const handleCommentsClick = (userId) => {\r\n    setSelectedComments(userId);\r\n  };\r\n\r\n  const handleCloseComments = () => {\r\n    setSelectedComments(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={(e) => setNewName(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  user.name\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <input\r\n                    type=\"email\"\r\n                    value={newEmail}\r\n                    onChange={(e) => setNewEmail(e.target.value)}\r\n                  />\r\n                ) : (\r\n                  user.email\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editUserId === user.id ? (\r\n                  <button className=\"update-btn\" onClick={handleUpdateClick}>\r\n                    Update\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"edit-btn\" onClick={() => handleEditClick(user)}>\r\n                    Edit\r\n                  </button>\r\n                )}\r\n                <button className=\"delete-btn\" onClick={() => onDelete(user.id)}>\r\n                  Delete\r\n                </button>\r\n                <button className=\"comments-btn\" onClick={() => handleCommentsClick(user.id)}>\r\n                  Show Comments\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {selectedComments !== null && (\r\n        <div className=\"comments-popup\">\r\n          <button className=\"close-btn\" onClick={handleCloseComments}>\r\n            Close\r\n          </button>\r\n          <h3>Comments</h3>\r\n          <div className=\"comments-container\">\r\n            {comments[selectedComments] && comments[selectedComments].map((comment) => (\r\n              <div key={comment.id} className=\"comment-box\">\r\n                {comment.body}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}